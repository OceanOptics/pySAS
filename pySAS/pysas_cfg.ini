[DEFAULT]
path_to_data = data

[GPS]
port = /dev/tty.usbmodem14301
;port = /dev/tty.usbserial-FT1JYJBF1
baudrate = 9600
;baudrate = 115200
timeout = 10
relay_gpio_pin = 17

[IndexingTable]
port = /dev/tty.usbserial-FT1JYJBF0
;port = /dev/tty.usbserial-A105VJYY
baudrate = 9600
timeout = 5
write_timeout = 0
relay_gpio_pin = 27

[HyperSAS]
# On RPi make sure to disable shell and kernel access to serial and disable xonxoff
;port = /dev/tty.usbserial-FT1JYJBF1
port = /dev/ttys001
baudrate = 57600
# For OSX
;xonxoff = True
# For RPi
;xonxoff = False
timeout = 10
# Calibration file
sip = /Users/nils/Documents/PycharmProjects/pySASv1/pySAS/calibration_files/THS0009_15Aug20.sip
relay_gpio_pin = 22

[Es]
# On RPi make sure to disable shell and kernel access to serial and disable xonxoff
port = /dev/tty.usbserial-FT1JYJBF2
baudrate = 57600
# For OSX
xonxoff = True
# For RPi
;xonxoff = False
timeout = 10
# Calibration file
sip = ????
relay_gpio_pin = 23

[AutoPilot]
compass_mounted_on_indexing_table = False
valid_indexing_table_orientation_limits = -90:75
# phi_v = 90 degrees according to HyperSAS Manual
;optimal_angle_away_from_sun = 90
# phi_v = 135 degrees according to Mobley 1999
optimal_angle_away_from_sun = 135
# Orientation of the GPS antennas with respect to the ship direction
#          0: GPS antenna point in the same direction as the ship
#         90: GPS antenna point looks at starboard of the ship
# 270 or -90: GPS antenna point looks at portside of the ship
#        180: GPS antenna point in the opposite direction of the ship
;gps_orientation_on_ship = 0

[KalmanFilter]
# The Kalman filter smooth the readings from the Compass
# which reduice the noise but introduice some latency
active = False
# Reactivity of Filter
process_variance = 9e-2
# Variance of measurement (degree)
estimated_measurement_variance = 8

[Runner]
# Heading source:
#   + gps_relative_position (default): use dual GPS RTK relative positioning
#   + gps_motion: use motion of GPS to estimate heading
#   + gps_vehicle: use orientation of single GPS to estimate heading (not sure of mechanism behind)
#   + ths: use the compass embedded in the THS of the Satlantic HyperSAS
heading_source = gps_relative_position
# Update tower position every N seconds
refresh = 5
# Indexing table is positioned only if sun_altitude > minimum_sun_altitude
min_sun_elevation = 5
# Mode of operation (manual | auto) can be switched in user interface
#   manual: aim indexing table via user interface
#               data is logging continuously when sensors are on
#   auto: automatically set indexing table,
#               data is logging continuously
operation_mode = auto
# Halt Host System when closing application
halt_host_on_exit = False




